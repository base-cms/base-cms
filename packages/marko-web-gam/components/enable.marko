import buildTargeting from "../utils/build-targeting";

$ const { req } = out.global;

<!-- Create default options and merge with input -->
$ const options = {
  enableSingleRequest: true,
  collapseEmptyDivs: true,
  setSafeFrameConfig: false,
  ...input.options,
};

<!-- Build options -->
$ const calls = [];
$ if (options.enableSingleRequest) calls.push("googletag.pubads().enableSingleRequest();");
$ if (options.collapseEmptyDivs) calls.push("googletag.pubads().collapseEmptyDivs();");
$ if (options.setSafeFrameConfig) {
  const cfg = JSON.stringify(options.setSafeFrameConfig);
  calls.push(`googletag.pubads().setSafeFrameConfig(${cfg});`);
}

<!-- Build global targeting calls -->
$ const keyValues = {
  ...input.keyValues,
  env: process.env.NODE_ENV,
};
$ const includePath = input.includePath =! null ? input.includePath : true;
$ const includeHost = input.includeHost =! null ? input.includeHost : true;
$ const includeEnv = input.includeEnv =! null ? input.includeEnv : true;
$ if (includePath) keyValues.path = req.path;
$ if (includeHost) keyValues.host = req.hostname.replace(/\./g, "|");
$ if (includeEnv) keyValues.env = process.env.NODE_ENV;
$ const targetingStr = buildTargeting(keyValues);
$ if (targetingStr) calls.push(`googletag.pubads().${targetingStr};`);

<!-- Enable services -->
$ calls.push("googletag.enableServices();");

<!-- Render the script tag -->
<script>googletag.cmd.push(function() { ${calls.join(" ")} });</script>
